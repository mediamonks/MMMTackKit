{"Protocols/Tack_Builder_Block.html#/asTackComponents()":{"name":"asTackComponents()","parent_name":"Tack_Builder_Block"},"Protocols/Tack_Builder_Block.html":{"name":"Tack_Builder_Block"},"Protocols.html#/MMMTackKitViewOrLayoutGuide":{"name":"MMMTackKitViewOrLayoutGuide"},"Functions.html#/>=(_:)":{"name":">=(_:)"},"Functions.html#/>==(_:)":{"name":">==(_:)","abstract":"<p>A &ldquo;double pin&rdquo;, that is <code>&gt;==padding^priority</code> is the same as <code>&quot;&gt;=padding,==padding@priority&quot;</code> in VFL."},"Functions.html#/==(_:)":{"name":"==(_:)"},"Functions.html#/^(_:_:)":{"name":"^(_:_:)","abstract":"<p>Analogue of <code>@</code> in VFL, i.e. <code>padding^249</code> is the same as using <code>&quot;padding@249&quot;</code> in VFL.</p>"},"Functions.html#/|-(_:)":{"name":"|-(_:)"},"Functions.html#/-(_:_:)":{"name":"-(_:_:)"},"Functions.html#/-|(_:)":{"name":"-|(_:)"},"Functions.html#/-<|(_:)":{"name":"-<|(_:)"},"Functions.html#/|>-(_:)":{"name":"|>-(_:)"},"Extensions/NSLayoutConstraint.html#/asTackComponents()":{"name":"asTackComponents()","parent_name":"NSLayoutConstraint"},"Extensions/Array.html#/asTackComponents()":{"name":"asTackComponents()","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/NSLayoutConstraint.html":{"name":"NSLayoutConstraint"},"Extensions.html#/UIView":{"name":"UIView"},"Extensions.html#/UILayoutGuide":{"name":"UILayoutGuide"},"Enums/_Tack/ViewRef.html#/this":{"name":"this","parent_name":"ViewRef"},"Enums/_Tack/ViewRef.html#/superview":{"name":"superview","parent_name":"ViewRef"},"Enums/_Tack/ViewRef.html#/safeAreaOfSuperview":{"name":"safeAreaOfSuperview","parent_name":"ViewRef"},"Enums/_Tack/Side.html#/leading":{"name":"leading","parent_name":"Side"},"Enums/_Tack/Side.html#/trailing":{"name":"trailing","parent_name":"Side"},"Enums/_Tack/Padding.html#/equal(_:_:)":{"name":"equal(_:_:)","parent_name":"Padding"},"Enums/_Tack/Padding.html#/greaterThanOrEqual(_:_:)":{"name":"greaterThanOrEqual(_:_:)","parent_name":"Padding"},"Enums/_Tack/Padding.html#/doublePin(_:_:)":{"name":"doublePin(_:_:)","parent_name":"Padding"},"Enums/_Tack/Padding.html":{"name":"Padding","parent_name":"_Tack"},"Enums/_Tack.html#/SuperviewPadding":{"name":"SuperviewPadding","parent_name":"_Tack"},"Enums/_Tack.html#/ViewPadding":{"name":"ViewPadding","parent_name":"_Tack"},"Enums/_Tack.html#/PaddingSuperview":{"name":"PaddingSuperview","parent_name":"_Tack"},"Enums/_Tack.html#/PaddingSuperviewSafeArea":{"name":"PaddingSuperviewSafeArea","parent_name":"_Tack"},"Enums/_Tack/Side.html":{"name":"Side","parent_name":"_Tack"},"Enums/_Tack/ViewRef.html":{"name":"ViewRef","parent_name":"_Tack"},"Enums/_Tack.html#/Anchor":{"name":"Anchor","parent_name":"_Tack"},"Enums/_Tack.html#/Pair":{"name":"Pair","parent_name":"_Tack"},"Enums/_Tack.html#/ChainPadding":{"name":"ChainPadding","parent_name":"_Tack"},"Enums/Tack/VerticalAlignmentPolicy.html#/none":{"name":"none","abstract":"<p>Don&rsquo;t align vertically.</p>","parent_name":"VerticalAlignmentPolicy"},"Enums/Tack/VerticalAlignmentPolicy.html#/fill":{"name":"fill","abstract":"<p>Fill the view in the receiver.</p>","parent_name":"VerticalAlignmentPolicy"},"Enums/Tack/VerticalAlignmentPolicy.html#/top":{"name":"top","abstract":"<p>Align the view to the top of the receiver.</p>","parent_name":"VerticalAlignmentPolicy"},"Enums/Tack/VerticalAlignmentPolicy.html#/firstBaseline":{"name":"firstBaseline","abstract":"<p>Align the view to the first baseline of the receiver.</p>","parent_name":"VerticalAlignmentPolicy"},"Enums/Tack/VerticalAlignmentPolicy.html#/center":{"name":"center","abstract":"<p>Align the view in the center of the receiver.</p>","parent_name":"VerticalAlignmentPolicy"},"Enums/Tack/VerticalAlignmentPolicy.html#/golden":{"name":"golden","abstract":"<p>Align the view in the center, using the golden ratio multiplier.</p>","parent_name":"VerticalAlignmentPolicy"},"Enums/Tack/VerticalAlignmentPolicy.html#/bottom":{"name":"bottom","abstract":"<p>Align the view to the bottom of the receiver.</p>","parent_name":"VerticalAlignmentPolicy"},"Enums/Tack/VerticalAlignmentPolicy.html#/lastBaseline":{"name":"lastBaseline","abstract":"<p>Align the view to the last baseline of the receiver.</p>","parent_name":"VerticalAlignmentPolicy"},"Enums/Tack/HorizontalAlignmentPolicy.html#/none":{"name":"none","abstract":"<p>Don&rsquo;t align horizontally.</p>","parent_name":"HorizontalAlignmentPolicy"},"Enums/Tack/HorizontalAlignmentPolicy.html#/fill":{"name":"fill","abstract":"<p>Fill the view in the receiver.</p>","parent_name":"HorizontalAlignmentPolicy"},"Enums/Tack/HorizontalAlignmentPolicy.html#/left":{"name":"left","abstract":"<p>Align the view on the left side of the receiver.</p>","parent_name":"HorizontalAlignmentPolicy"},"Enums/Tack/HorizontalAlignmentPolicy.html#/leading":{"name":"leading","abstract":"<p>Align the view on the left side for LTR languages, and on the right for RTL languages.</p>","parent_name":"HorizontalAlignmentPolicy"},"Enums/Tack/HorizontalAlignmentPolicy.html#/center":{"name":"center","abstract":"<p>Align the view in the center of the receiver.</p>","parent_name":"HorizontalAlignmentPolicy"},"Enums/Tack/HorizontalAlignmentPolicy.html#/golden":{"name":"golden","abstract":"<p>Align the view in the center, using the golden ratio multiplier.</p>","parent_name":"HorizontalAlignmentPolicy"},"Enums/Tack/HorizontalAlignmentPolicy.html#/right":{"name":"right","abstract":"<p>Align the view to the right side of the receiver.</p>","parent_name":"HorizontalAlignmentPolicy"},"Enums/Tack/HorizontalAlignmentPolicy.html#/trailing":{"name":"trailing","abstract":"<p>Align the view to the right side for LTR languages, and on the left side for RTL languages.</p>","parent_name":"HorizontalAlignmentPolicy"},"Enums/Tack/Conductor.html#/init(activeStates:)":{"name":"init(activeStates:)","abstract":"<p>Create a new conductor, passing the active states.</p>","parent_name":"Conductor"},"Enums/Tack/Conductor.html#/init(activeState:)":{"name":"init(activeState:)","abstract":"<p>Create a new conductor, passing a active state.</p>","parent_name":"Conductor"},"Enums/Tack/Conductor.html#/activeState":{"name":"activeState","abstract":"<p>Set the active state. Please note you&rsquo;ll have to call <code>setNeedsUpdateConstraints()</code> after this.</p>","parent_name":"Conductor"},"Enums/Tack/Conductor.html#/activeStates":{"name":"activeStates","abstract":"<p>Set the active states. Please note you&rsquo;ll have to call <code>setNeedsUpdateConstraints()</code> after this.</p>","parent_name":"Conductor"},"Enums/Tack/Conductor.html#/add(state:constraints:)":{"name":"add(state:constraints:)","abstract":"<p>Add constraints to the <code>Conductor</code> for a given state.</p>","parent_name":"Conductor"},"Enums/Tack/Conductor.html#/subscript(_:)":{"name":"subscript(_:)","parent_name":"Conductor"},"Enums/Tack/Conductor.html#/add(states:constraints:)":{"name":"add(states:constraints:)","abstract":"<p>Add constraints to the <code>Conductor</code> for a given set of states.</p>","parent_name":"Conductor"},"Enums/Tack/Conductor.html#/remove(state:)":{"name":"remove(state:)","abstract":"<p>Remove all constraints from the conductor for a given state.</p>","parent_name":"Conductor"},"Enums/Tack/Conductor.html#/updateConstraints()":{"name":"updateConstraints()","abstract":"<p>Call this in your <code>UIView.updateConstraints()</code> method.</p>","parent_name":"Conductor"},"Enums/Tack/Box/OpenBox.html#/init(box:)":{"name":"init(box:)","parent_name":"OpenBox"},"Enums/Tack/Box/OpenBox.html#/activateOnce(_:_:)":{"name":"activateOnce(_:_:)","abstract":"<p>Activates the given constraints only once. Uses an auto-closure for efficiency.</p>","parent_name":"OpenBox"},"Enums/Tack/Box/OpenBox.html#/activate(_:)":{"name":"activate(_:)","abstract":"<p>Activates the given constraints and adds them into the box to automatically deactivate","parent_name":"OpenBox"},"Enums/Tack/Box/OpenBox.html#/close()":{"name":"close()","parent_name":"OpenBox"},"Enums/Tack/Box.html#/init()":{"name":"init()","parent_name":"Box"},"Enums/Tack/Box.html#/open()":{"name":"open()","abstract":"<p>Returns the accessor object through which the constraints should be added and which ensures they","parent_name":"Box"},"Enums/Tack/Box/OpenBox.html":{"name":"OpenBox","abstract":"<p>Allows to safely add permanent or dynamic constraints into a box.</p>","parent_name":"Box"},"Enums/Tack/Builder.html#/Block":{"name":"Block","parent_name":"Builder"},"Enums/Tack/Builder.html#/buildBlock(_:)":{"name":"buildBlock(_:)","parent_name":"Builder"},"Enums/Tack/Builder.html#/buildOptional(_:)":{"name":"buildOptional(_:)","parent_name":"Builder"},"Enums/Tack/Builder.html#/buildEither(first:)":{"name":"buildEither(first:)","parent_name":"Builder"},"Enums/Tack/Builder.html#/buildEither(second:)":{"name":"buildEither(second:)","parent_name":"Builder"},"Enums/Tack/Builder.html#/buildArray(_:)":{"name":"buildArray(_:)","parent_name":"Builder"},"Enums/Tack/OrientedChain.html#/H(_:alignAll:)":{"name":"H(_:alignAll:)","parent_name":"OrientedChain"},"Enums/Tack/OrientedChain.html#/V(_:alignAll:)":{"name":"V(_:alignAll:)","parent_name":"OrientedChain"},"Enums/Tack/HorizontalAlignment.html#/none":{"name":"none","parent_name":"HorizontalAlignment"},"Enums/Tack/HorizontalAlignment.html#/leading":{"name":"leading","parent_name":"HorizontalAlignment"},"Enums/Tack/HorizontalAlignment.html#/left":{"name":"left","parent_name":"HorizontalAlignment"},"Enums/Tack/HorizontalAlignment.html#/centerX":{"name":"centerX","parent_name":"HorizontalAlignment"},"Enums/Tack/HorizontalAlignment.html#/trailing":{"name":"trailing","parent_name":"HorizontalAlignment"},"Enums/Tack/HorizontalAlignment.html#/right":{"name":"right","parent_name":"HorizontalAlignment"},"Enums/Tack/VerticalAlignment.html#/none":{"name":"none","parent_name":"VerticalAlignment"},"Enums/Tack/VerticalAlignment.html#/top":{"name":"top","parent_name":"VerticalAlignment"},"Enums/Tack/VerticalAlignment.html#/firstBaseline":{"name":"firstBaseline","parent_name":"VerticalAlignment"},"Enums/Tack/VerticalAlignment.html#/centerY":{"name":"centerY","parent_name":"VerticalAlignment"},"Enums/Tack/VerticalAlignment.html#/lastBaseline":{"name":"lastBaseline","parent_name":"VerticalAlignment"},"Enums/Tack/VerticalAlignment.html#/bottom":{"name":"bottom","parent_name":"VerticalAlignment"},"Enums/Tack.html#/activate(_:)":{"name":"activate(_:)","parent_name":"Tack"},"Enums/Tack.html#/deactivate(_:)":{"name":"deactivate(_:)","parent_name":"Tack"},"Enums/Tack.html#/activate(constraints:)":{"name":"activate(constraints:)","abstract":"<p>Activate an array of constraints using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Tack/Builder.html\">Builder</a></code>.</p>","parent_name":"Tack"},"Enums/Tack.html#/constraints(_:)":{"name":"constraints(_:)","parent_name":"Tack"},"Enums/Tack.html#/constraints(constraints:)":{"name":"constraints(constraints:)","abstract":"<p>Build an array of constraints using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Tack/Builder.html\">Builder</a></code>.</p>","parent_name":"Tack"},"Enums/Tack.html#/H(_:alignAll:)":{"name":"H(_:alignAll:)","parent_name":"Tack"},"Enums/Tack.html#/V(_:alignAll:)":{"name":"V(_:alignAll:)","parent_name":"Tack"},"Enums/Tack/VerticalAlignment.html":{"name":"VerticalAlignment","parent_name":"Tack"},"Enums/Tack/HorizontalAlignment.html":{"name":"HorizontalAlignment","parent_name":"Tack"},"Enums/Tack/OrientedChain.html":{"name":"OrientedChain","parent_name":"Tack"},"Enums/Tack.html#/Chain":{"name":"Chain","parent_name":"Tack"},"Enums/Tack/Builder.html":{"name":"Builder","abstract":"<p>A resultBuilder that allows you to activate / create chains. This allows you to use conditionals inside your","parent_name":"Tack"},"Enums/Tack/Box.html":{"name":"Box","abstract":"<p>Simplifies management of permanent vs dynamic constraints in <code>updateContraints()</code>.</p>","parent_name":"Tack"},"Enums/Tack.html#/ViewOrLayoutGuide":{"name":"ViewOrLayoutGuide","abstract":"<p>You can use a <code>UIView</code> or a <code>UILayoutGuide</code> everywhere this protocol is expected.</p>","parent_name":"Tack"},"Enums/Tack/Conductor.html":{"name":"Conductor","abstract":"<p>The <code>Conductor</code> can be used to orchestrate a set of constraints, e.g. between state changes. The main goal is to avoid","parent_name":"Tack"},"Enums/Tack.html#/align(view:to:horizontally:vertically:insets:)":{"name":"align(view:to:horizontally:vertically:insets:)","abstract":"<p>Aligns a view (or a layout guide) relative to another view (or layout guide) using a few simple","parent_name":"Tack"},"Enums/Tack.html#/align(view:to:vertically:insets:)":{"name":"align(view:to:vertically:insets:)","abstract":"<p>Aligns a view (or a layout guide) relative to another view (or layout guide) using a few simple","parent_name":"Tack"},"Enums/Tack.html#/constraints(aligning:to:horizontally:vertically:insets:)":{"name":"constraints(aligning:to:horizontally:vertically:insets:)","abstract":"<p>Return the constraints normally applied by <code>Tack.align()</code>. For more info, look at that doc-block.</p>","parent_name":"Tack"},"Enums/Tack.html#/constraints(aligning:to:vertically:insets:)":{"name":"constraints(aligning:to:vertically:insets:)","abstract":"<p>Return the constraints normally applied by <code>Tack.align()</code>. For more info, look at that doc-block.</p>","parent_name":"Tack"},"Enums/Tack/HorizontalAlignmentPolicy.html":{"name":"HorizontalAlignmentPolicy","parent_name":"Tack"},"Enums/Tack/VerticalAlignmentPolicy.html":{"name":"VerticalAlignmentPolicy","parent_name":"Tack"},"Enums/Tack.html":{"name":"Tack"},"Enums/_Tack.html":{"name":"_Tack","abstract":"<p>The types here are only to glue the views and paddings via our operators, they should not be used explicitly.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}